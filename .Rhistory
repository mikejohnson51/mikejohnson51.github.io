cartography_small,
'" class="img-fluid"></a></div></div>')
}
return(html)
}
publications
publications = read_excel("data.xlsx", sheet = "publications")
publications_html <- publications %>%
mutate(number = 1:n()) %>%
rowwise() %>%
do(data.frame(.,new_buttons = buttons(pdf = .$pdf,
abstract = .$abstract,
num = .$number,
code = .$code,
cartography_small = .$cartography_small,
cartography_large = .$cartography_large),stringsAsFactors=FALSE)) %>%
do(data.frame(., formated_authors = gsub("\\{\\\\me\\}", '<b>J.M Johnson</b>', .$authors),stringsAsFactors=FALSE))
publications_html
glimpse(publications_html)
publications = read_excel("data.xlsx", sheet = "publications") %>%
filter(status != "4")
publications_html <- publications %>%
mutate(number = 1:n()) %>%
rowwise() %>%
do(data.frame(.,new_buttons = buttons(pdf = .$pdf,
abstract = .$abstract,
num = .$number,
code = .$code,
cartography_small = .$cartography_small,
cartography_large = .$cartography_large),
stringsAsFactors=FALSE)) %>%
do(data.frame(., formated_authors = gsub("\\{\\\\me\\}", '<b>J.M Johnson</b>', .$authors),
stringsAsFactors=FALSE))
publications
publications_html %>%
mutate(
citation = paste0('<i class="far fa-file-alt"></i>',
formated_authors, '. ',
ifelse(is.na(link), title, text_spec(title, link = link)),
ifelse(journal == "In review" || journal == "In preparation", '. ',  '. In '),
journal, ', ',
year, '.',
new_buttons)
) %>%
select(citation)
publications_html %>%
mutate(
citation = paste0('<i class="far fa-file-alt"></i>',
formated_authors, '. ',
ifelse(is.na(link), title, text_spec(title, link = link)),
ifelse(journal == "In review" || journal == "In preparation", '. ',  '. In '),
journal, ', ',
year, '.',
new_buttons)
)
publications_html  <- publications_html %>%
mutate(
citation = paste0('<i class="far fa-file-alt"></i>',
formated_authors, '. ',
ifelse(is.na(link), title, text_spec(title, link = link)),
ifelse(journal == "In review" || journal == "In preparation", '. ',  '. In '),
journal, ', ',
year, '.',
new_buttons)
) %>%
select(status, citation)
publications_html
publication_section <- function(stat) {
publications_html %>%
filter(status == stat) %>%
select(citation)
}
publication_section <- function(stat) {
tbl <- publications_html %>%
filter(status == stat) %>%
select(citation)
create_table(table = tbl, file_name = file_n)
}
publication_section <- function(stat, file_n) {
tbl <- publications_html %>%
filter(status == stat) %>%
select(citation)
create_table(table = tbl, file_name = file_n)
}
publication_section(stat = "0", file_n = "non_peer_publications.html")
publication_section(stat = "0", file_n = "non_peer_publications.html")
publication_section(stat = "1", file_n = "peer_publications.html")
publication_section(stat = "2", file_n = "review_publications.html")
publication_section(stat = "3", file_n = "maps.publications.html")
publication_section(stat = "1", "Peer Reviewed", file_n = "peer_publications.html")
publication_section(stat = "1", "Peer Reviewed", file_n = "peer_publications.html")
publication_section(stat = "1", "Peer Reviewed", file_n = "peer_publications.html")
publication_section <- function(stat, caption, file_n) {
tbl <- publications_html %>%
filter(status == stat) %>%
select(citation)
create_table(table = tbl, caption = caption, file_name = file_n)
}
publication_section(stat = "1", "Peer Reviewed", file_n = "peer_publications.html")
publication_section(stat = "1", caption = "Peer Reviewed", file_n = "peer_publications.html")
create_table <- function(table = NULL, file_name = NULL, removeHeaders = TRUE, caption = NULL) {
table <- table %>%
kable(escape = FALSE, caption = caption) %>%
kable_styling(bootstrap_options = c("hover"))
if (removeHeaders) {
table <- gsub("<thead>.*</thead>", "", table)
}
fileConn<-file(paste0('generated_html_files/',file_name))
writeLines(table, fileConn)
close(fileConn)
}
publication_section(stat = "1", caption = "Peer Reviewed", file_n = "peer_publications.html")
publication_section(stat = "0", caption = "Not peer-reviewed", file_n = "non_peer_publications.html")
publication_section(stat = "1", caption = "Peer Reviewed", file_n = "peer_publications.html")
publication_section(stat = "2", caption = "Under Review", file_n = "review_publications.html")
publication_section(stat = "3", caption = "Maps", file_n = "maps.publications.html")
publication_section(stat = "0", caption = "Technical Reports", file_n = "non_peer_publications.html")
publication_section(stat = "1", caption = "Peer Reviewed", file_n = "peer_publications.html")
publication_section(stat = "2", caption = "In Review", file_n = "review_publications.html")
publication_section(stat = "3", caption = "Other", file_n = "maps.publications.html")
publications = read_excel("data.xlsx", sheet = "publications") %>%
filter(status != "4")
buttons <- function(abstract, pdf, num, code, cartography_small, cartography_large) {
html = '<p> '
if (!is.na(abstract)) {
html = paste0(html,
'<a class="btn btn-default btn-xs" data-toggle="collapse" href="#abstract_',
num,
'" role="button">Absract</a>')
}
if (!is.na(pdf)) {
html = paste0(html,
'<a class="btn btn-default btn-xs" href="',
pdf,
'" download>PDF</a>')
}
if (!is.na(code)) {
html = paste0(html,
'<a class="btn btn-default btn-xs" href="',
code,
'" target="_blank">Code</a>')
}
if (!is.na(cartography_small)) {
html = paste0(html,
'<a class="btn btn-default btn-xs" data-toggle="collapse" href="#map_',
num,
'" role="button">Cartography</a>')
}
html = paste0(html, '<p>')
# Collapsable Sections
# Text Abstracts
if (!is.na(abstract)) {
html = paste0(html, '<div class="collapse" id="abstract_',num,'"><div class="card card-body"><p>',abstract,'</p></div></div>')
}
# Cartography Maps
if (!is.na(cartography_small)) {
html = paste0(html,
'<div class="collapse" id="map_',
num,
'"> <div class="card card-body"><a href="',
cartography_large,
'" data-toggle="lightbox"><img src="',
cartography_small,
'" class="img-fluid"></a></div></div>')
}
return(html)
}
publications_html <- publications %>%
mutate(number = 1:n()) %>%
rowwise() %>%
do(data.frame(.,new_buttons = buttons(pdf = .$pdf,
abstract = .$abstract,
num = .$number,
code = .$code,
cartography_small = .$cartography_small,
cartography_large = .$cartography_large),
stringsAsFactors=FALSE)) %>%
do(data.frame(., formated_authors = gsub("\\{\\\\me\\}", '<b>J.M Johnson</b>', .$authors),
stringsAsFactors=FALSE))
publications_html  <- publications_html %>%
mutate(
citation = paste0('<i class="far fa-file-alt"></i>',
formated_authors, '. ',
ifelse(is.na(link), title, text_spec(title, link = link)),
ifelse(journal == "In review" || journal == "In preparation", '. ',  '. In '),
journal, ', ',
year, '.',
new_buttons)
) %>%
select(status, citation)
publication_section <- function(stat, caption, file_n) {
tbl <- publications_html %>%
filter(status == stat) %>%
select(citation)
create_table(table = tbl, caption = caption, file_name = file_n)
}
publication_section(stat = "0", caption = "Technical Reports", file_n = "non_peer_publications.html")
publication_section(stat = "1", caption = "Peer Reviewed", file_n = "peer_publications.html")
publication_section(stat = "2", caption = "In Review", file_n = "review_publications.html")
publication_section(stat = "3", caption = "Other", file_n = "maps.publications.html")
create_subsection <- function(data, stat) {
data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{',  italic(data$title), '}', '. ',
data$journal, '. ',
ifelse(is.na(data$link2), '',paste0('{',url(data$link), '}', '.'))
)
)
}
df <- data.frame(citation = paste0(publications$authors, '.',
' (', publications$year, '). ',
'{',  italic(publications$title), '}', '. ',
publications$journal, '. ',
ifelse(is.na(publications$link2), '',paste0('{',url(publications$link), '}', '.'))
)
)
create_subsection <- function(data, stat) {
data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{',  italic(data$title), '}', '. ',
data$journal, '. ',
ifelse(is.na(data$link2), '',paste0('{',url(data$link), '}', '.'))
)
)
}
create_subsection(data=publications, stat = "0")
publications
names(publications)
df <- data.frame(citation = paste0(publications$authors, '.',
' (', publications$year, '). ',
'{',  italic(publications$title), '}', '. ',
publications$journal, '. ',
ifelse(is.na(publications$link2), '',paste0('{',url(publications$link), '}', '.'))
)
)
?print.xtable
?print.xtable
x = 4:1
x
library(magrittr)
library(dplyr, warn.conflicts = FALSE)
library(knitr)
library(kableExtra)
library(readxl)
library(xtable)
create_table <- function(table = NULL, file_name = NULL, removeHeaders = TRUE, caption = NULL) {
table <- table %>%
kable(escape = FALSE, caption = caption) %>%
kable_styling(bootstrap_options = c("hover"))
if (removeHeaders) {
table <- gsub("<thead>.*</thead>", "", table)
}
fileConn<-file(paste0('generated_html_files/',file_name))
writeLines(table, fileConn)
close(fileConn)
}
bold <- function(x) { paste0('BOLD', x) }
italic <- function(x) { paste0('ITALIC', x) }
url <- function(x) { paste0('URL', sanitize(x, type = "latex")) }
bold.somerows <- function(x) {
x = gsub('BOLD(.*)',paste('\\\\textbf{\\1','}'),x)
}
#italic <- function(x) { paste0('ITALIC', x) }
italic.somerows <-
function(x) gsub('ITALIC(.*)',paste('\\\\textit{\\1','}'),x)
newline.somerows <-
function(x) gsub('NEWLINE',paste('\\\\newline'),x)
san_url <-
function(x) gsub('URL(.*)', paste0('\\\\blueUrl{\\1','}'),x)
san_all <- function(x){
x = bold.somerows(x)
x = italic.somerows(x)
x = newline.somerows(x)
x = san_url(x)
return(x)
}
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching
df = data.frame(date = bold(teaching$data),
class = teaching$class,
professor = italic(teaching$professor))
df
teaching
teaching %>% distinct(class, professor)
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching %>%
group_by(class, professor) %>%
summarise(date=paste(text,collapse=''))
teaching %>%
group_by(class, professor) %>%
summarise(date=paste(date,collapse=''))
teaching
teaching %>%
group_by(class, professor) %>%
summarise(date=paste(data,collapse=''))
teaching %>%
group_by(class, professor) %>%
summarise(date=paste(data,collapse='NEWLINE'))
teaching = read_excel("data.xlsx", sheet = "teaching")
df = data.frame(date = bold(teaching$data),
class = teaching$class,
professor = italic(teaching$professor))
rownames(df) <- nrow(df):1
print(xtable(df, align = c("r","p{2.5cm}", "P{8.0cm}", "l")),
floating = FALSE,
include.colnames = FALSE,
hline.after = c(),
sanitize.text.function = san_all)
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching %>%
group_by(class, professor) %>%
summarise(date=paste(data,collapse='NEWLINE'))
data.frame(date = bold(teaching$data),
class = teaching$class,
professor = italic(teaching$professor))
teaching <- teaching %>%
group_by(class, professor) %>%
summarise(date=paste(data,collapse='NEWLINE'))
data.frame(date = bold(teaching$data),
class = teaching$class,
professor = italic(teaching$professor))
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching_merged <- teaching %>%
group_by(class, professor) %>%
summarise(date=paste(data,collapse='NEWLINE'))
teaching_merged <- teaching %>%
group_by(class, professor) %>%
summarise(data=paste(data,collapse='NEWLINE'))
data.frame(date = bold(teaching_merged$data),
class = teaching_merged$class,
professor = italic(teaching_merged$professor))
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching_merged <- teaching %>%
group_by(class, professor) %>%
summarise(data=paste(data,collapse='NEWLINE'))
df = data.frame(date = bold(teaching_merged$data),
class = teaching_merged$class,
professor = italic(teaching_merged$professor))
rownames(df) <- nrow(df):1
print(xtable(df, align = c("r","p{2.5cm}", "P{8.0cm}", "l")),
floating = FALSE,
include.colnames = FALSE,
hline.after = c(),
sanitize.text.function = san_all)
teaching %>%
group_by(class, professor) %>%
summarise(data=paste(data,collapse='\\\\newline'))
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching
teaching %>%
tidyr::separate(data, c("Quarter", "Year"))
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
arrange(desc(Year), desc(Quarter)) %>%
group_by(class, professor) %>%
tidyr::unite(data, Year, Quarter, sep = " ") %>%
summarise(data=paste(data,collapse=''))
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
arrange(desc(Year), desc(Quarter)) %>%
group_by(class, professor) %>%
tidyr::unite(data, Quarter, Year, sep = " ") %>%
summarise(data=paste(data,collapse=''))
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
arrange(desc(Year), desc(Quarter))
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
arrange(desc(Year), desc(Quarter)) %>%
group_by(class, professor) %>%
tidyr::unite(data, Quarter, Year, sep = " ")
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
arrange(desc(Year), desc(Quarter)) %>%
group_by(class, professor) %>%
tidyr::unite(data, Quarter, Year, sep = " ")
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
arrange(desc(Year), desc(Quarter)) %>%
group_by(class, professor) %>%
tidyr::unite(data, Quarter, Year, sep = " ") %>%
summarise(data=paste(data,collapse=''))
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
arrange(desc(Year), desc(Quarter))
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
arrange(desc(Year), desc(Quarter)) %>%
group_by(class, professor) %>%
mutate(points = as.numeric(Year) + as.numeric(Quarter)) %>%
tidyr::unite(data, Quarter, Year, sep = " ") %>%
summarise(data=paste(data,collapse=''), points = sum(points))
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
arrange(desc(Year), desc(Quarter)) %>%
group_by(class, professor) %>%
mutate(points = as.numeric(Year) + as.numeric(Quarter)/10) %>%
tidyr::unite(data, Quarter, Year, sep = " ") %>%
summarise(data=paste(data,collapse=''), points = max(points)) %>%
arrange(desc(points))
teaching %>%
tidyr::separate(data, c("Quarter", "Year")) %>%
mutate(Quarter = factor(Quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T)) %>%
# arrange(desc(Year), desc(Quarter)) %>%
group_by(class, professor) %>%
mutate(points = as.numeric(Year) + as.numeric(Quarter)/10) %>%
tidyr::unite(data, Quarter, Year, sep = " ") %>%
summarise(data=paste(data,collapse=''), points = max(points)) %>%
arrange(desc(points))
awards = read_excel("data.xlsx", sheet = "awards")
df = data.frame(date = bold(awards$year),
name = bold(awards$name),
details = sanitize(awards$details, type = "latex"))
df
awards
awards$details
gsub(".*\\(\\$.*\\).*", "\\1", awards$details)
gsub(".*\\($.*\\).*", "\\1", awards$details)
gsub(".*\\(.*\\).*", "\\1", awards$details)
gsub(".*\\(.*\\).*", "\\1", "CUAHSI ($15,000)" )
gsub(".*\\(.*\\)", "\\1", "CUAHSI ($15,000)" )
gsub(".*\\($(.*)\\).*", "\\1", awards$details)
gsub(".*\\(\\$(.*)\\).*", "\\1", awards$details)
gsub(".*\\(\\$(.*?)\\).*", "\\1", awards$details)
str_extract_all(awards$details, "\\([^()]+\\)")[[1]]
stringr::str_extract_all(awards$details, "\\([^()]+\\)")[[1]]
stringr::str_extract_all(awards$details, "\\([^()]+\\)")
stringr::str_extract_all(awards$details, "\\([^()]+\\)")[[1]] %>%
stringr::str_remove_all("(")
stringr::str_extract_all(awards$details, "\\([^()]+\\)")[[1]] %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("(")
stringr::str_extract_all(awards$details, "\\([^()]+\\)")[[1]] %>%
purrr::flatten_chr()
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("(")
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr()
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("\\(")
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("\\(|\\)")
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("\\(|\\|\\$)")
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("\\(|\\|$)")
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("\\(|\\)")
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("\\(|\\)|\\$")
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("^[0-9]")
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("[^0-9]")
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("[^0-9]") %>%
sum(as.numeric(.))
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("[^0-9]") %>%
as.numeric()
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("[^0-9]") %>%
as.numeric() %>% sum()
stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("[^0-9]") %>%
as.numeric() %>%
sum() %>%
scales::dollar()
total
total <- stringr::str_extract_all(awards$details, "\\([^()]+\\)") %>%
purrr::flatten_chr() %>%
stringr::str_remove_all("[^0-9]") %>%
as.numeric() %>%
sum() %>%
scales::dollar()
total
awards %>%
tibble::add_row(details = total)
