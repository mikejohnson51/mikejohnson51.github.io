caption = paste0("\\hspace{-5mm}\\vspace{-5mm}", type)),
include.rownames = TRUE,
sanitize.colnames.function = boldheader)
cat("\\vspace{4mm}")
}
com %>% group_by(year, class) %>% group_split() %>%  rev() %>% purrr::walk(com_table)
form = 'Teaching Assistant Evaluations
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
results = 'asis'
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
results = 'asis'
)
source("global.R")
form = "Curriculum Vitae"
awards = read_excel("data.xlsx", sheet = "awards")
awards = read_excel("data.xlsx", sheet = "awards")
awards$include
awards$include != 1
awards = awards[is.na(awards$include),]
awards
publications = read_excel("data.xlsx", sheet = "publications") %>%
filter(status != "4")
publications
stat = "In Review Articles"
cat("\\vspace{-3mm}")
data <- publications %>%
filter(status == stat)
data
df <- data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{"',  (data$title), '"}',
ifelse(endsWith(data$title, "?"), ' ', '. '),
ifelse(stat == "Working Papers", " In preparation", paste0("\\textit{", data$journal, "}")), '. ',
ifelse(is.na(data$link), '',paste0('{',url(data$link), '}', '.'))
)
)
df <- data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{"',  (data$title), '"}',
ifelse(endsWith(data$title, "?"), ' ', '. '),
ifelse(stat == "Working Papers", " In preparation", paste0("\\textit{", data$journal, "}")), '. ',
ifelse(is.na(data$link), '',paste0('{',url(data$link), '}', '.'))
)
)
df
data$journal
paste0(data$authors, '.',
' (', data$year, '). ',
'{"',  (data$title), '"}',
ifelse(endsWith(data$title, "?"), ' ', '. '),
ifelse(stat == "Working Papers", " In preparation", paste0("\\textit{", data$journal, "}")), '. ',
ifelse(is.na(data$link), '',paste0('{',url(data$link), '}', '.'))
)
stat == "Working Papers"
ifelse(stat == "Working Papers", " In preparation", paste0("\\textit{", data$journal, "}"))
stat == "Working Papers"
rep(stat, nrow(df))
df <- data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{"',  (data$title), '"}',
ifelse(endsWith(data$title, "?"), ' ', '. '),
ifelse(rep(stat, nrow(df)), stat == "Working Papers", " In preparation", paste0("\\textit{", data$journal, "}")), '. ',
ifelse(is.na(data$link), '',paste0('{',url(data$link), '}', '.'))
)
)
df <- data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{"',  (data$title), '"}',
ifelse(endsWith(data$title, "?"), ' ', '. '),
ifelse(rep(stat, nrow(df)) == "Working Papers", " In preparation", paste0("\\textit{", data$journal, "}")), '. ',
ifelse(is.na(data$link), '',paste0('{',url(data$link), '}', '.'))
)
)
df
data <- publications %>%
filter(status == "Working Papers")
df <- data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{"',  (data$title), '"}',
ifelse(endsWith(data$title, "?"), ' ', '. '),
ifelse(rep(stat, nrow(data)) == "Working Papers", " In preparation\\textsuperscript{1}", paste0("\\textit{", data$journal, "}")), '. ',
ifelse(is.na(data$link), '',paste0('{',url(data$link), '}', '.'))
)
)
rownames(df) <- nrow(df):1
df
print(xtable(df, align = c("r","P{15.5cm}"), caption = paste0("\\hspace{-5mm}Working Papers"),
include.rownames = TRUE,
caption.placement = "bottom",
caption = '\\textsuperscript{1}\\textcolor{gray}{\\textit{Grader}}'))
publications = read_excel("data.xlsx", sheet = "publications") %>%
filter(status != "4")
data <- publications %>%
filter(status == stat)
data
if(is.na(data$preprint)){NULL}else{data$preprint}
df <- data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{"',  (data$title), '"}',
ifelse(endsWith(data$title, "?"), ' ', '. '),
ifelse(rep(stat, nrow(data)) == "Working Papers", " In preparation\\textsuperscript{", if(is.na(data$preprint)){NULL}else{data$preprint} ,"}", paste0("\\textit{", data$journal, "}")), '. ',
ifelse(is.na(data$link), '',paste0('{',url(data$link), '}', '.'))
)
)
rep(stat, nrow(data)) == "Working Papers"
any(!is.an(data$preprint))
!is.na(data$preprint)
any(!is.na(data$preprint))
if(any(!is.na(data$preprint))){
cat("\\vspace{-6mm}")
cat('\\tab\\textsuperscript{1}\\textcolor{gray}{Preprint available upon request.}')
cat("\\vspace{3mm}")
}
!is.na(data$preprint)
cat("\\vspace{-3mm}")
data <- publications %>%
filter(status == stat)
df <- data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{"',  (data$title), '"}',
ifelse(endsWith(data$title, "?"), ' ', '. '),
ifelse(rep(stat, nrow(data)) == "Working Papers",
paste0(" In preparation", if(!is.na(data$preprint)){paste0('\\textsuperscript{1}')}),
paste0("\\textit{", data$journal, "}", if(!is.na(data$preprint)){paste0('\\textsuperscript{1}')})), '. ',
ifelse(is.na(data$link), '',paste0('{',url(data$link), '}', '.'))
)
)
rownames(df) <- nrow(df):1
print(xtable(df, align = c("r","P{15.5cm}"), caption = paste0("\\hspace{-5mm}", stat)),
include.rownames = TRUE)
if(any(!is.na(data$preprint))){
cat("\\vspace{-6mm}")
cat('\\tab\\textsuperscript{1}\\textcolor{gray}{Preprint available upon request.}')
cat("\\vspace{3mm}")
}
create_subsection <- function(stat) {
cat("\\vspace{-3mm}")
data <- publications %>%
filter(status == stat)
df <- data.frame(citation = paste0(data$authors, '.',
' (', data$year, '). ',
'{"',  (data$title), '"}',
ifelse(endsWith(data$title, "?"), ' ', '. '),
ifelse(rep(stat, nrow(data)) == "Working Papers",
paste0(" In preparation", if(!is.na(data$preprint)){paste0('\\textsuperscript{1}')}),
paste0("\\textit{", data$journal, "}", if(!is.na(data$preprint)){paste0('\\textsuperscript{1}')})), '. ',
ifelse(is.na(data$link), '',paste0('{',url(data$link), '}', '.'))
)
)
rownames(df) <- nrow(df):1
print(xtable(df, align = c("r","P{15.5cm}"), caption = paste0("\\hspace{-5mm}", stat)),
include.rownames = TRUE)
if(any(!is.na(data$preprint))){
cat("\\vspace{-6mm}")
cat('\\tab\\textsuperscript{1}\\textcolor{gray}{Preprint available upon request.}')
cat("\\vspace{3mm}")
}
}
c("Peer-Reviewed Journal Articles", "Technical Reports", "Cartography", "In Review Articles", "Working Papers") %>% purrr::walk(create_subsection)
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching <- teaching %>%
mutate(quarter = factor(quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T),
class_link = ifelse(is.na(link), class,
paste0('<a href="',link, '">', class, '</a>'))) %>%
group_by(class, class_link, quarter, professor, type) %>%
mutate(points = as.numeric(year) + as.numeric(quarter)/10) %>%
summarise(year = paste(year,collapse=', '),
points = max(points)) %>%
tidyr::unite(data, quarter, year, sep = " ") %>%
arrange(desc(points))
teaching[1,1] = paste0(teaching[1,1], "\\textsuperscript{1}")
col2 <- paste0('{', bold(teaching$class), '}', ' NEWLINE ',
teaching$type, " - ", italic(teaching$professor))
df = data.frame(date = bold(teaching$data),
class = col2)
rownames(df) <- nrow(df):1
print(xtable(df, align = c("l","P{5cm}", "p{12.0cm}"),
floating = FALSE,
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching <- teaching %>%
teaching = read_excel("data.xlsx", sheet = "teaching")
teaching <- teaching %>%
mutate(quarter = factor(quarter, levels = c("Fall", "Winter", "Spring", "Summer"),
ordered = T),
class_link = ifelse(is.na(link), class,
paste0('<a href="',link, '">', class, '</a>'))) %>%
group_by(class, class_link, quarter, professor, type) %>%
mutate(points = as.numeric(year) + as.numeric(quarter)/10) %>%
summarise(year = paste(year,collapse=', '),
points = max(points)) %>%
tidyr::unite(data, quarter, year, sep = " ") %>%
arrange(desc(points))
teaching[1,1] = paste0(teaching[1,1], "\\textsuperscript{1}")
col2 <- paste0('{', bold(teaching$class), '}', ' NEWLINE ',
teaching$type, " - ", italic(teaching$professor))
df = data.frame(date = bold(teaching$data),
class = col2)
rownames(df) <- nrow(df):1
print(xtable(df, align = c("l","P{5cm}", "p{12.0cm}"),
tabular.environment = 'longtable',
floating = FALSE,
include.rownames = T)
# cat("\\vspace{-6mm}")
# cat('\\tab\\textsuperscript{1}\\textcolor{gray}{Grader}')
# cat("\\vspace{3mm}")
# cat("\\vspace{-6mm}")
!is.na(data$preprint)
if(!is.na(data$preprint)){paste0('\\textsuperscript{1}')}))
if(!is.na(data$preprint)){paste0('\\textsuperscript{1}')}
presentations = read_excel("data.xlsx", sheet = "presentations")
presentations$blank = ""
col2 <- paste0('{',bold(presentations$location), '}', ' NEWLINE ', italic(presentations$title))
df = data.frame(date = bold(presentations$data),
title = col2,
blank = presentations$blank,
type = presentations$type)
df
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
results = 'asis'
)
source("global.R")
form = "Curriculum Vitae"
return(df)
print_ref = function(x, df){
df[nrow(df) + 1,] = paste0('{', bold(x[1]), '}',
' NEWLINE ',
'{', italic(x[2]), '}',
' NEWLINE ',
'{', italic(x[3]), '}',
"\\vspace{2mm}")
return(df)
}
df = data.frame(
name = 'Keith Clarke, PhD',
affil = 'Department of Geography University of California, Santa Barbara, USA',
email = 'kcclarke@ucsb.edu')
df = add_row(df,
name  = 'Krzysztof Janowicz, PhD',
affil = 'Department of Geography University of California, Santa Barbara, USA',
email ='janowicz@ucsb.edu')
df = add_row(df,
name = 'Trey Flowers, PhD',
affil = 'Director of the Analysis and Prediction Division at the National Water Center',
email = 'trey.flowers@noaa.gov')
df = add_row(df,
name = 'David Blodgett',
affil = 'Project coordinator with the USGS Office of Water Information Center for Integrated Data Analytics',
email = 'dblodgett@usgs.gov')
df = add_row(df,
name = 'Aubrey Dugger',
affil = 'Associate Scientist IV, National Center for Atmospheric Research',
email = 'adugger@ucar.edu')
df$name = paste0('{', bold(df$name), '} NEWLINE ')
df$affil = paste0('\\tab {', (df$affil), '} NEWLINE ')
df$email = paste0("\\tab italic(df$email)")
rownames(df) <- nrow(df):1
df
print(xtable(data.frame(do.call(paste0, c(df[,1:3]))), align = c("l","p{20cm}"),
include.colnames = F,
include.rownames = T,
floating = TRUE,
tabular.environment = "tabular",
sanitize.colnames.function = boldheader))
do.call(paste0, c(df[,1:3]))
df$name = paste0(bold(df$name))
df$affil = paste0('\\newline \\tab ', (df$affil))
df$email = paste0("\\newline \\tab italic(df$email)")
rownames(df) <- nrow(df):1
do.call(paste0, c(df[,1:3]))
print_ref = function(x, df){
df[nrow(df) + 1,] = paste0('{', bold(x[1]), '}',
' NEWLINE ',
'{', italic(x[2]), '}',
' NEWLINE ',
'{', italic(x[3]), '}',
"\\vspace{2mm}")
return(df)
}
df = data.frame(
name = 'Keith Clarke, PhD',
affil = 'Department of Geography University of California, Santa Barbara, USA',
email = 'kcclarke@ucsb.edu')
df = add_row(df,
name  = 'Krzysztof Janowicz, PhD',
affil = 'Department of Geography University of California, Santa Barbara, USA',
email ='janowicz@ucsb.edu')
df = add_row(df,
name = 'Trey Flowers, PhD',
affil = 'Director of the Analysis and Prediction Division at the National Water Center',
email = 'trey.flowers@noaa.gov')
df = add_row(df,
name = 'David Blodgett',
affil = 'Project coordinator with the USGS Office of Water Information Center for Integrated Data Analytics',
email = 'dblodgett@usgs.gov')
df = add_row(df,
name = 'Aubrey Dugger',
affil = 'Associate Scientist IV, National Center for Atmospheric Research',
email = 'adugger@ucar.edu')
df$name = paste0(bold(df$name))
df$affil = paste0('\\newline \\tab ', (df$affil))
df$email = paste0("\\newline \\tab italic(df$email)")
rownames(df) <- nrow(df):1
print(xtable(data.frame(do.call(paste0, c(df[,1:3]))), align = c("l","p{20cm}"),
include.colnames = F,
include.rownames = T,
floating = TRUE,
tabular.environment = "tabular",
sanitize.colnames.function = boldheader))
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
results = 'asis'
)
source("global.R")
form = "Curriculum Vitae"
grants = read_excel("data.xlsx", sheet = "funded_research")
grants = read_excel("data.xlsx", sheet = "funded_research")
create_subsection <- function(grants) {
cat("\\vspace{-3mm}")
df <- data.frame(citation = paste0('\\textbf{',grants$role, '}: ',
"\\textit{" , grants$name, "}, ",
grants$source, " (",grants$date, ")",
" \\$", grants$amount
))
rownames(df) <- nrow(df):1
print(xtable(df, align = c("r","P{15.5cm}")),
include.rownames = TRUE)
}
create_subsection(grants)
cat("\\vspace{2mm}")
software = read_excel("data.xlsx", sheet = "software")
create_software_sections <- function(type) {
cat("\\vspace{-3mm}")
data <- filter(software, role == type)
type <- stringr::str_to_title(type)
cat("\\vspace{-3mm}")
col2 <- paste0('{',bold(data$short_desc), '}', ' NEWLINE ', 'URL', data$link)
df = data.frame(title = bold(data$main), desc = col2)
rownames(df) <- nrow(df):1
print(xtable(df, align = c("l","p{5cm}", "p{10.0cm}"),
caption = paste0("\\hspace{-5mm}", type)),
include.colnames = F,
include.rownames = T,
floating = TRUE,
tabular.environment = "tabular",
sanitize.colnames.function = boldheader)
cat("\\vspace{2mm}")
}
software <- software %>%
filter(!is.na(short_desc)) %>%
select(main, short_desc, homepage, code, role) %>%
mutate(link = ifelse(is.na(homepage), code, homepage))
grants = read_excel("data.xlsx", sheet = "funded_research")
create_subsection <- function(grants) {
cat("\\vspace{-3mm}")
df <- data.frame(citation = paste0('\\textbf{',grants$role, '}: ',
"\\textit{" , grants$name, "}, ",
grants$source, " (",grants$date, ")",
" \\$",  scales::dollar_format(grants$amount)
))
rownames(df) <- nrow(df):1
print(xtable(df, align = c("r","P{15.5cm}")),
include.rownames = TRUE)
}
create_subsection(grants)
scales::dollar_format(grants$amount)
scales::dollar_format(grants$amount)
scales::dollar_format
scales::dollar(grants$amount)
knitr::opts_chunk$set(echo = FALSE)
# file:///Users/patjohnson/Documents/GitHub/mike_johnson/index.html
library(dplyr)
library(knitr)
library(kableExtra)
library(readxl)
library(glue)
create_table <- function(table = NULL, file_name = NULL, removeHeaders = TRUE, caption = NULL) {
table <- table %>%
kable(escape = FALSE, caption = caption) %>%
kable_styling(bootstrap_options = c("hover"))
if (removeHeaders) {
table <- gsub("<thead>.*</thead>", "", table)
}
fileConn<-file(paste0('generated_html_files/',file_name))
writeLines(table, fileConn)
close(fileConn)
}
data_file <- "data.xlsx"
grants = read_excel(data_file, sheet = "funded_research")
grants
awards = read_excel(data_file, sheet = "awards")
awards_html <- awards %>%
mutate(
col2 = paste(text_spec(name, bold = TRUE), details, sep = " - ")
) %>%
select(year, col2)
create_table(table = awards_html, file_name = 'awards.html')
awards = read_excel(data_file, sheet = "awards")
awards_html <- awards %>%
mutate(
col2 = paste(text_spec(name, bold = TRUE), details, sep = " - ")
) %>%
select(year, col2)
awards_html
grants_html <- grants %>% mutate(record = paste0('\\textbf{',grants$role, '}: ',
"\\textit{" , grants$name, "}, ",
grants$source, " (",grants$date, ")",
" \\",  scales::dollar(grants$amount)
)) %>% select(record)
grants_html
create_table(table = grants_html, file_name = 'funding.html')
awards = read_excel(data_file, sheet = "awards")
awards_html <- awards %>%
mutate(
col2 = paste(text_spec(name, bold = TRUE), details, sep = " - ")
)
awards_html
awards_html <- awards %>%
mutate(
col2 = paste(text_spec(name, bold = TRUE), details, sep = " - ")
) %>% arrange(type)
awards_html <- awards %>%
awards_html
awards_html <- awards %>%
mutate(
col2 = paste(text_spec(name, bold = TRUE), details, sep = " - ")
) %>% arrange(type)
awards_html
awards_html_travel <- awards %>%
mutate(
col2 = paste(text_spec(name, bold = TRUE), details, sep = " - ")
) %>% select(type == "Awards and Fellowships") %>%
select(year, col2)
awards_html_travel <- awards %>%
mutate(
col2 = paste(text_spec(name, bold = TRUE), details, sep = " - ")
) %>% filter(type == "Awards and Fellowships") %>%
select(year, col2)
awards_html_travel
travel_html <- awards %>%
mutate(
col2 = paste(text_spec(name, bold = TRUE), details, sep = " - ")
)  %>% filter(type == "Travel Grants") %>%
select(year, col2)
travel_html
?text_spec
grants_html <- grants %>% mutate(record = paste0(text_spec(grants$role, bold = TRUE), " ",
text_spec(grants$name, italic = TRUE), " ",
grants$source," (" grants$date, ") ", scales::dollar(grants$amount))
grants_html <- grants %>% mutate(record = paste0(text_spec(grants$role, bold = TRUE), " ",
text_spec(grants$name, italic = TRUE), " ",
grants$source," (", grants$date, ") ", scales::dollar(grants$amount))
"\\textit{" , grants$name, "}, ",
grants_html <- grants %>% mutate(record = paste0(text_spec(grants$role, bold = TRUE), " ",
text_spec(grants$name, italic = TRUE), " ",
grants$source," (", grants$date, ") ", scales::dollar(grants$amount)))
grants_html
presentations = read_excel(data_file, sheet = "presentations")
presentations
presentations$title, "//. ", text_spec(presentations$location, italic = TRUE), " (", presentations$type, "). ", presentations$data)) %>% select(record)
presentations_html <- presentations %>% mutate(record = paste0(
presentations$title, "//. ", text_spec(presentations$location, italic = TRUE), " (", presentations$type, "). ", presentations$data)) %>% select(record)
presentations_html
paste0(
presentations$title, ". ", text_spec(presentations$location, italic = TRUE), " (", presentations$type, "). ", presentations$data)
posters_html <- presentations %>% filter(type != 'prestentation') %>%
mutate(record = paste0(
presentations$title, ". ",
text_spec(presentations$location, italic = TRUE),
" (", presentations$type, "). ",
presentations$data)) %>%
select(record)
posters_html
presentations$title, ". ",
posters_html <- presentations %>% filter(type != 'presentation') %>%
mutate(record = paste0(
presentations$title, ". ",
text_spec(presentations$location, italic = TRUE),
" (", presentations$type, "). ",
presentations$data)) %>%
select(record)
title, ". ",
posters_html <- presentations %>% filter(type != 'presentation') %>%
mutate(record = paste0(
title, ". ",
text_spec(location, italic = TRUE), ". ",
data)) %>%
select(record)
posters_html
grants_html <- grants %>% mutate(record = text_spec(grants$name, italic = TRUE),
amount = scales::dollar(grants$amount)) %>%
select(date, record, amount, role )
grants_html
)
grants_html <- grants %>% mutate(record = text_spec(grants$name, italic = TRUE),
amount = scales::dollar(grants$amount)) %>%
select(date, role, amount, record)
software = read_excel(data_file, sheet = "software")
software$role
software$main
software = software[c(1,2,5,4,7,10,8,3,9),]
